/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminIndexImport } from './routes/admin.index'
import { Route as AdminProjectIdSplatImport } from './routes/admin.$projectId.$'

// Create/Update Routes

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProjectIdSplatRoute = AdminProjectIdSplatImport.update({
  id: '/admin/$projectId/$',
  path: '/admin/$projectId/$',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/$projectId/$': {
      id: '/admin/$projectId/$'
      path: '/admin/$projectId/$'
      fullPath: '/admin/$projectId/$'
      preLoaderRoute: typeof AdminProjectIdSplatImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/admin': typeof AdminIndexRoute
  '/admin/$projectId/$': typeof AdminProjectIdSplatRoute
}

export interface FileRoutesByTo {
  '/admin': typeof AdminIndexRoute
  '/admin/$projectId/$': typeof AdminProjectIdSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/$projectId/$': typeof AdminProjectIdSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/admin' | '/admin/$projectId/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/admin' | '/admin/$projectId/$'
  id: '__root__' | '/admin/' | '/admin/$projectId/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminProjectIdSplatRoute: typeof AdminProjectIdSplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminProjectIdSplatRoute: AdminProjectIdSplatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/admin/",
        "/admin/$projectId/$"
      ]
    },
    "/admin/": {
      "filePath": "admin.index.tsx"
    },
    "/admin/$projectId/$": {
      "filePath": "admin.$projectId.$.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
